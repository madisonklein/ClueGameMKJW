Before:
//CALCADJACENCIES AND CALCTARGETS
	public void calcAdjacencies(){
		for(int row = 0; row < numRows; row++){
			for(int col = 0; col < numCols; col++){
			Set<BoardCell> temp = new HashSet<BoardCell>();
			if((row > 0) && (row < numRows - 1)){
			if((col > 0) && (col < numCols - 1)){
				if(isAdj(row, col, -1, 0)) temp.add(board[row - 1][col]);
				if(isAdj(row, col, 1, 0)) temp.add(board[row + 1][col]);
				if(isAdj(row, col, 0, -1)) temp.add(board[row][col - 1]);
				if(isAdj(row, col, 0, 1)) temp.add(board[row][col + 1]);
				}
			else if(col == 0){
				if(isAdj(row, col, -1, 0)) temp.add(board[row - 1][col]);
				if(isAdj(row, col, 1, 0)) temp.add(board[row + 1][col]);
				if(isAdj(row, col, 0, 1)) temp.add(board[row][col + 1]);	
			}
			else if(col == numCols - 1){
				if(isAdj(row, col, -1, 0)) temp.add(board[row - 1][col]);
				if(isAdj(row, col, 1, 0)) temp.add(board[row + 1][col]);
				if(isAdj(row, col, 0, -1)) temp.add(board[row][col - 1]);
				}
			}
			else if(row == 0){
				if((col > 0) && (col < numCols - 1)){
					if(isAdj(row, col, 1, 0)) temp.add(board[row + 1][col]);
					if(isAdj(row, col, 0, -1)) temp.add(board[row][col - 1]);
					if(isAdj(row, col, 0, 1)) temp.add(board[row][col + 1]);	
				}
				else if(col == 0){
					if(isAdj(row, col, 1, 0)) temp.add(board[row + 1][col]);
					if(isAdj(row, col, 0, 1)) temp.add(board[row][col + 1]);	
				}
				else if(col == numCols - 1){
					if(isAdj(row, col, 1, 0)) temp.add(board[row + 1][col]);
					if(isAdj(row, col, 0, -1)) temp.add(board[row][col - 1]);	
				}
			}
			else if(row == numRows - 1){
				if((col > 0) && (col < numCols - 1)){
					if(isAdj(row, col, -1, 0)) temp.add(board[row - 1][col]);
					if(isAdj(row, col, 0, -1)) temp.add(board[row][col - 1]);
					if(isAdj(row, col, 0, 1)) temp.add(board[row][col + 1]);
				}
				if(col == 0){
					if(isAdj(row, col, -1, 0)) temp.add(board[row - 1][col]);
					if(isAdj(row, col, 0, 1)) temp.add(board[row][col + 1]);	
					}
				if(col == numCols - 1){
					if(isAdj(row, col, -1, 0)) temp.add(board[row - 1][col]);
					if(isAdj(row, col, 0, -1)) temp.add(board[row][col- 1]);
					}
				}
				adjacencyMap.put(getCellAt(row, col), temp);
			}				
		}
	}
	
	After:
	//CALCADJACENCIES AND CALCTARGETS
	public void calcAdjacencies(){
		for(int row = 0; row < numRows; row++){
			for(int col = 0; col < numCols; col++){
			Set<BoardCell> temp = new HashSet<BoardCell>();
			if (isAdj(row, col, -1, 0)) temp.add(board[row-1][col]);
			if(isAdj(row, col, 1, 0)) temp.add(board[row + 1][col]);
			if(isAdj(row, col, 0, -1)) temp.add(board[row][col - 1]);
			if(isAdj(row, col, 0, 1)) temp.add(board[row][col + 1]);
			adjacencyMap.put(getCellAt(row, col), temp);
			}
		}
	}